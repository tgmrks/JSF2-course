<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
xmlns:h="http://java.sun.com/jsf/html"
xmlns:ui="http://java.sun.com/jsf/facelets">

<h:head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Products List</title>
</h:head>

<h:body>
	<h:form>
		<!--
		<h:commandLink value="About" action="About"/> action="About" is the page target
		The approach above is called "forward". It makes fewer requests to the server, which is better for performance, 
		but you won't change URL. For changing URL, use "redirect" approach below. This one will demand more from the server. 
		<h:commandLink value="About" action="About?faces-redirect=true"/>
		-->
		Try 
		<h:commandLink value="About" action="#{listProductsBean.getAbout}"/>
		link before and after adding to the form
		<br/>
		Product:
		<h:inputText value="#{listProductsBean.product.productName}"/>
		<br/>
		Manufacturer:
		<h:inputText value="#{listProductsBean.product.manufacturer}"/>
		<br/>
		Category:
		<h:inputText value="#{listProductsBean.product.category}"/>
		<br/>
		
		<h:commandButton value="Add"
		action="#{listProductsBean.addItem}" />				 
	</h:form>
	
	<ol>
		<ui:repeat var="item" value="#{listProductsBean.products}">
		<li>#{item.productName} - #{item.manufacturer} - #{item.category}</li>
		</ui:repeat>
	</ol>
</h:body>

</html>